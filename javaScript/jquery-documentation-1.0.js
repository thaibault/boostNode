// Generated by CoffeeScript 1.4.0

/*!
    jQuery plugin for "jquery-1.9.1".

    Copyright see require on https://github.com/thaibault/require

    Conventions see require on https://github.com/thaibault/require

    @author t.sickert@gmail.com (Torben Sickert)
    @version 1.0 stable
    @fileOverview
    This module provides common reusable logic a simple project documentation
    web page.
*/


/**
    @name jQuery
    @see www.jquery.com
*/


(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  (function(jQuery) {
    /**
        @memberOf jQuery
        @class
    */

    var Documentation;
    Documentation = (function(_super) {

      __extends(Documentation, _super);

      function Documentation() {
        return Documentation.__super__.constructor.apply(this, arguments);
      }

      Documentation.prototype.__name__ = 'Documentation';

      /**
          Saves default options for manipulating the default behaviour.
      
          @property {Object}
      */


      Documentation.prototype._options = {
        domNodeSelectorPrefix: 'body.{1}',
        domNodes: {
          tableOfContentLinks: 'div.toc a[href^="#"]',
          imprintLink: 'a[href="#imprint"]',
          imprintContent: 'section.imprint',
          mainContent: 'section#main_content'
        },
        trackingCode: 'UA-0-0'
      };

      /**
          Holds all needed dom nodes.
      
          @property {Object}
      */


      Documentation.prototype._domNodes = {};

      /**
          @description Initializes the interactive web app.
      
          @param {Object} options An options object.
      
          @returns {jQuery.Tools} Returns the current instance.
      */


      Documentation.prototype.initialize = function(options) {
        var _this = this;
        Documentation.__super__.initialize.call(this, options);
        this._domNodes.imprintContent.hide();
        this.on(this._domNodes.tableOfContentLinks, 'click', function() {
          return jQuery.scrollTo(jQuery(this).attr('href'), 'slow');
        });
        return this.on(this._domNodes.imprintLink, 'click', function() {
          return _this._domNodes.mainContent.fadeOut('slow', function() {
            return _this._domNodes.imprintContent.fadeIn('slow');
          });
        });
      };

      return Documentation;

    })(jQuery.Website["class"]);
    /** @ignore
    */

    jQuery.Documentation = function() {
      var self;
      self = new Documentation;
      return self._controller.apply(self, arguments);
    };
    /** @ignore
    */

    return jQuery.Documentation["class"] = Documentation;
  }).call(this, this.jQuery);

}).call(this);
